
#run cutadapt, detect and trim my custom landing pads
cutadapt -a TTGGTGCTGATATTGC...GAAGATAGAGCGACAG -a CTGTCGCTCTATCTTC...GCAATATCAGCACCAA -o subset_landing_pad.fastq subset.fastq --discard-untrimmed

#with checking reverse complement reads insteadd of putting -a twice
#I checked and they find the same number of instances of th adapters
#also changed file names
  #THIS ONE#########################33
cutadapt -a TTGGTGCTGATATTGC...GAAGATAGAGCGACAG -O 10 --discard-untrimmed --revcomp -o all_reads_custom_landing_pads_trimmed.fastq FBC73506_fastq_pass_d5fa85e0_b727e37a_0.fastq > all_reads_custom_landing_pads_trimmed.txt

### OUTPUT: 
#   Done           00:13:51    20,226,344 reads @  41.1 Âµs/read;   1.46 M reads/minute

  
#check if adapter is founf midstrand: 
cutadapt -a TTGGTGCTGATATTGC --rest-file rest_chimeras.fastq --discard-untrimmed --revcomp -o subset_landing_pad.fastq subset.fastq > rest_revcomp_subset_landing_pad.txt
head bi

#cutadapt cross
#cutadapt -g file:cross_barcodes.fasta --revcomp --rest-file cross_chimeras.fastq -o crossALL_landing-pad-rc_subset.fastq --discard-untrimmed landing-pad-rc_subset.fastq > crossALL_landing-pad-rc_subset.txt

#okay now get sep files: 

segment_array=("S" "M" "L")

#search for the cross, plaque, and segment info with cutadapt in loops. I think its worth noting that the loop searches with replacement. ie, reads can be classified multiple times

  #THIS ONE
  for cross_barcode_seq in $(grep -v "^>" "cross_barcodes.fasta" ); do
      
    #get line in barcodes fasta with cross sequence
    cross_seq_line=$(sed -n "/${cross_barcode_seq}/=" cross_barcodes.fasta);        
    #get line in barcodes fasta with fasta name
    cross_header_line=$((cross_seq_line -1)); 
    cross_header=$(sed -n "${cross_header_line}p" cross_barcodes.fasta);
    cross_header=${cross_header#*>};
    echo "cross = ${cross_header}";  
    #O=14; tot len =18 (75%)
    cutadapt -a ${cross_barcode_seq} -O 14 --revcomp --discard-untrimmed --rest-file ${cross_header}_chimeras.fastq -o ${cross_header}_reads.fastq all_reads_custom_landing_pads_trimmed.fastq > ${cross_header}_reads.txt;

      for plaque_barcode_seq in $(grep -v "^>" "plaque_barcodes.fasta" ); do
        
      #get line in barcodes fasta with plaque sequence
      plaque_seq_line=$(sed -n "/${plaque_barcode_seq}/=" plaque_barcodes.fasta);        
      #get line in barcodes fasta with fasta name
      plaque_header_line=$((plaque_seq_line -1)); 
      plaque_header=$(sed -n "${plaque_header_line}p" plaque_barcodes.fasta);
      plaque_header=${plaque_header#*>};
        
      plaque_num="${plaque_header#*plaque}";
      cross_num="${cross_header#*cross}";
      echo "plaque = ${plaque_header}";  

      mkdir barcode${cross_num}${plaque_num};

      #O=18, tot length = 24 (75%)
      cutadapt -g ${plaque_barcode_seq} -O 14 --no-indels --revcomp --discard-untrimmed -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq  ${cross_header}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.txt;

    

     # for segment in "${segment_array[@]}"; do

        #S O= 15, (75%)
        cutadapt -a CTTTCGTACAACCGAGTAGG...CTCCTGAAGTATCTCACGCC -O 15 --revcomp --discard-untrimmed -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads.fastq barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads.txt;

        #M O= 13, (75% of the sorter one)
        cutadapt -a CGCTACGGCGGTATTGTC...GCTCACCAAGTAAGGTGTAGTAT -O 13 --revcomp --discard-untrimmed -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads.fastq barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads.txt;

        #L O=12 (75% of the sorter one)
        cutadapt -a TCGATGTTCAACTACTACGC...GCGAGACTCGCTTTGC -O 12 --revcomp --discard-untrimmed -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads.fastq barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads.txt;    
    done
done




#plaques: 
 for plaque_barcode_seq in $(grep -v "^>" "plaque_barcodes.fasta" ); do
      
    #get line in barcodes fasta with plaque sequence
    plaque_seq_line=$(sed -n "/${plaque_barcode_seq}/=" plaque_barcodes.fasta);        
    #get line in barcodes fasta with fasta name
    plaque_header_line=$((plaque_seq_line -1)); 
    plaque_header=$(sed -n "${plaque_header_line}p" plaque_barcodes.fasta);
    plaque_header=${plaque_header#*>};
    echo "plaque = ${plaque_header}";    
    cutadapt -g ${plaque_barcode_seq} -O 14 --no-indels --revcomp --rest-file ${plaque_header}_chimeras.fastq -o ${plaque_header}_landing-pad-rc_subset.fastq --discard-untrimmed big_landing-pad-rc_subset.fastq > ${plaque_header}_landing-pad-rc_subset.txt;
  done
      


c


################## ADD LENGTH FILTERING #######################################3333
 #THIS ONE
  for cross_barcode_seq in $(grep -v "^>" "cross_barcodes.fasta" ); do
      
    #get line in barcodes fasta with cross sequence
    cross_seq_line=$(sed -n "/${cross_barcode_seq}/=" cross_barcodes.fasta);        
    #get line in barcodes fasta with fasta name
    cross_header_line=$((cross_seq_line -1)); 
    cross_header=$(sed -n "${cross_header_line}p" cross_barcodes.fasta);
    cross_header=${cross_header#*>};
    echo "cross = ${cross_header}";  
    #O=14; tot len =18 (75%)
    #cutadapt -a ${cross_barcode_seq} -O 14 --revcomp --discard-untrimmed --rest-file ${cross_header}_chimeras.fastq -o ${cross_header}_reads.fastq all_reads_custom_landing_pads_trimmed.fastq > ${cross_header}_reads.txt;

      for plaque_barcode_seq in $(grep -v "^>" "plaque_barcodes.fasta" ); do
        
      #get line in barcodes fasta with plaque sequence
      plaque_seq_line=$(sed -n "/${plaque_barcode_seq}/=" plaque_barcodes.fasta);        
      #get line in barcodes fasta with fasta name
      plaque_header_line=$((plaque_seq_line -1)); 
      plaque_header=$(sed -n "${plaque_header_line}p" plaque_barcodes.fasta);
      plaque_header=${plaque_header#*>};
        
      plaque_num="${plaque_header#*plaque}";
      cross_num="${cross_header#*cross}";
      echo "plaque = ${plaque_header}";  

      #mkdir barcode${cross_num}${plaque_num};

      #O=18, tot length = 24 (75%)
      #cutadapt -g ${plaque_barcode_seq} -O 14 --no-indels --revcomp --discard-untrimmed -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq  ${cross_header}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.txt;

    

     # for segment in "${segment_array[@]}"; do

        #S O= 15, (75%)
        # S amplicon length = 621, filter reads shorter than 120 bp and longer than 850 bp
        cutadapt -a CTTTCGTACAACCGAGTAGG...CTCCTGAAGTATCTCACGCC -O 15 --revcomp --discard-untrimmed -m 120 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads_filt_tooshort.fastq -M 850 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads_filt_toolong.fastq -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads_filt.fastq barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads_filt.txt;

        #M O= 13, (75% of the sorter one)
        # M amplicon length = 443, filter reads shorter than 100 bp and longer than 670 bp
        cutadapt -a CGCTACGGCGGTATTGTC...GCTCACCAAGTAAGGTGTAGTAT -O 13 --revcomp --discard-untrimmed -m 100 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads_filt_tooshort.fastq -M 670 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads_filt_toolong.fastq -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads_filt.fastq barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads_filt.txt;

        #L O=12 (75% of the sorter one)
        # L amplicon length = 941, filter reads shorter than 200 bp and longer than 1200 bp
        cutadapt -a TCGATGTTCAACTACTACGC...GCGAGACTCGCTTTGC -O 12 --revcomp --discard-untrimmed -m 200 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads_filt_tooshort.fastq -M 1200 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads_filt_toolong.fastq  -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads_filt.fastq barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads_filt.txt;    
    done
done















#cuutadapt plaque
  cutadapt -a file:plaque_barcodes.fasta --revcomp --rest-file plaquel_chimeras.fastq -o cross_landing-pad-rc_subset.fastq --discard-untrimmed landing-pad-rc_subset.fastq > cross_landing-pad-rc_subset.txt




#once filtered, cutadapt and




#actual line to run genotyping and usearch
bash genotyping_new.sh -d /group/sldmunozgrp/cysto_LMGSeq08-25/cutadapt -e /group/sldmunozgrp/cysto_LMGSeq08-25/cutadapt/sample_list2.csv -c /group/sldmunozgrp/cysto_LMGSeq08-25/cutadapt/cross_list.txt -s /group/sldmunozgrp/cysto_LMGSeq08-25/cutadapt/refs/ref_phi6_S_04.fasta -m /group/sldmunozgrp/cysto_LMGSeq08-25/cutadapt/refs/ref_phi6_M_01.fasta -l /group/sldmunozgrp/cysto_LMGSeq08-25/cutadapt/refs/ref_phi6_L_89.fasta |& tee genotyping_usearch_rerun.out




for bsix in 









srun -c 2 -t 20:00:00 --mem=30000 --partition=low --pty /bin/bash
module load conda
conda activate cutadapt




#higher error

  #THIS ONE#########################33
cutadapt -a TTGGTGCTGATATTGC...GAAGATAGAGCGACAG -e 0.15 -O 10 --discard-untrimmed --revcomp -o all_reads_custom_landing_pads_trimmed_error0.15.fastq FBC73506_fastq_pass_d5fa85e0_b727e37a_0.fastq > all_reads_custom_landing_pads_trimmed_error0.15.txt



#THIS ONE
  for cross_barcode_seq in $(grep -v "^>" "cross_barcodes.fasta" ); do
      
    #get line in barcodes fasta with cross sequence
    cross_seq_line=$(sed -n "/${cross_barcode_seq}/=" cross_barcodes.fasta);        
    #get line in barcodes fasta with fasta name
    cross_header_line=$((cross_seq_line -1)); 
    cross_header=$(sed -n "${cross_header_line}p" cross_barcodes.fasta);
    cross_header=${cross_header#*>};
    echo "cross = ${cross_header}";  
    #O=14; tot len =18 (75%)
    cutadapt -a ${cross_barcode_seq} -O 14 --no-indels -e 0.15 --revcomp --discard-untrimmed --rest-file ${cross_header}_chimeras.fastq -o ${cross_header}_reads.fastq all_reads_custom_landing_pads_trimmed_error0.15.fastq > ${cross_header}_reads.txt;

      for plaque_barcode_seq in $(grep -v "^>" "plaque_barcodes.fasta" ); do
        
      #get line in barcodes fasta with plaque sequence
      plaque_seq_line=$(sed -n "/${plaque_barcode_seq}/=" plaque_barcodes.fasta);        
      #get line in barcodes fasta with fasta name
      plaque_header_line=$((plaque_seq_line -1)); 
      plaque_header=$(sed -n "${plaque_header_line}p" plaque_barcodes.fasta);
      plaque_header=${plaque_header#*>};
        
      plaque_num="${plaque_header#*plaque}";
      cross_num="${cross_header#*cross}";
      echo "plaque = ${plaque_header}";  

      mkdir barcode${cross_num}${plaque_num};

      #O=18, tot length = 24 (75%)
      cutadapt -g ${plaque_barcode_seq} -O 14 -e 0.15 --no-indels --revcomp --discard-untrimmed -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq  ${cross_header}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.txt;

    

     # for segment in "${segment_array[@]}"; do

        #S O= 15, (75%)
        # S amplicon length = 621, filter reads shorter than 120 bp and longer than 850 bp
        cutadapt -a CTTTCGTACAACCGAGTAGG...CTCCTGAAGTATCTCACGCC -e 0.15 -O 15 --no-indels --revcomp --discard-untrimmed -m 120 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads_filt_tooshort.fastq -M 850 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads_filt_toolong.fastq -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads_filt.fastq barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_S_reads_filt.txt;

        #M O= 13, (75% of the sorter one)
        # M amplicon length = 443, filter reads shorter than 100 bp and longer than 670 bp
        cutadapt -a CGCTACGGCGGTATTGTC...GCTCACCAAGTAAGGTGTAGTAT -e 0.15 -O 13 --no-indels --revcomp --discard-untrimmed -m 100 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads_filt_tooshort.fastq -M 670 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads_filt_toolong.fastq -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads_filt.fastq barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_M_reads_filt.txt;

        #L O=12 (75% of the sorter one)
        # L amplicon length = 941, filter reads shorter than 200 bp and longer than 1200 bp
        cutadapt -a TCGATGTTCAACTACTACGC...GCGAGACTCGCTTTGC -e 0.15 -O 12 --no-indels --revcomp --discard-untrimmed -m 200 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads_filt_tooshort.fastq -M 1200 --too-short-output barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads_filt_toolong.fastq  -o barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads_filt.fastq barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_reads.fastq > barcode${cross_num}${plaque_num}/barcode${cross_num}${plaque_num}_L_reads_filt.txt;    
    done
done



  
